package SqlBuilder

import Extensions.isAutoGeneratedMetaData
import Extensions.isAutoIncrement
import Extensions.isIgnore
import Extensions.json

/**
 * Created by sanf0rd on 10/07/17.
 */
fun SqlBuilder.Companion.insert(clazz: Any): String {
    val objectAsJson = clazz.json
    val queryBuilder = StringBuilder()
    queryBuilder.append("INSERT INTO ${clazz.javaClass.simpleName}")

    val keyBuilder = StringBuilder("(")
    val valueBuilder = StringBuilder(" VALUES(")

    val fields = clazz.javaClass.declaredFields + clazz.javaClass.superclass.declaredFields

    var isFirst = true
    for (field in fields) {
        if (field.isIgnore().not() && field.isAutoGeneratedMetaData().not()) {
            if (field.isAutoIncrement())
                continue

            if (isFirst.not()) {
                keyBuilder.append(",")
                valueBuilder.append(",")
            }

            keyBuilder.append(field.name)
            if (objectAsJson.get(field.name).isString)
                valueBuilder.append("'${objectAsJson.getString(field.name, "")}'")
            else if (objectAsJson.get(field.name).isBoolean) {
                if (objectAsJson.getBoolean(field.name, false))
                    valueBuilder.append("1")
                else valueBuilder.append("0")
            } else valueBuilder.append(objectAsJson.get(field.name))

            isFirst = false
        }
    }

    keyBuilder.append(")")
    valueBuilder.append(")")

    queryBuilder.append(keyBuilder)
    queryBuilder.append(valueBuilder)
    queryBuilder.append(";")

    //log(this.javaClass.simpleName, queryBuilder.toString())
    return queryBuilder.toString()
}